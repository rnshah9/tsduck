#-----------------------------------------------------------------------------
#
#  TSDuck - The MPEG Transport Stream Toolkit
#  Copyright (c) 2005-2022, Thierry Lelegard
#  All rights reserved.
#
#  Redistribution and use in source and binary forms, with or without
#  modification, are permitted provided that the following conditions are met:
#
#  1. Redistributions of source code must retain the above copyright notice,
#     this list of conditions and the following disclaimer.
#  2. Redistributions in binary form must reproduce the above copyright
#     notice, this list of conditions and the following disclaimer in the
#     documentation and/or other materials provided with the distribution.
#
#  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
#  AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
#  IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
#  ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE
#  LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
#  CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
#  SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
#  INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
#  CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
#  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF
#  THE POSSIBILITY OF SUCH DAMAGE.
#
#-----------------------------------------------------------------------------
#
#  GitHub Actions configuration file : Continuous Integration
#
#-----------------------------------------------------------------------------

name: Continuous integration

# Trigger the workflow on push or pull request, for master branch only.
on:
  push:
    branches: [master]
  pull_request:
    branches: [master]

# Build on Ubuntu, macOS and Windows, using C++11 (C++14 on Windows) and C++20 levels of standards.
jobs:
  build_unix:
    strategy:
      fail-fast: false
      matrix:
        # ubuntu-latest is currently ubuntu-20.04, too old for C++20, force ubuntu-22.04.
        os: [ubuntu-22.04, macos-latest]
        compiler: [gcc, clang]
        std: [11, 20]
        include:
        - os: ubuntu-22.04
          compiler: clang
          llvm: true
        - os: macos-latest
          # It has been noted on GitHub macOS runners that the host name can change
          # between steps or even the middle of a step. This breaks the naming scheme
          # of the build directory for binaries. As a consequence, we force BINDIR=bin.
          bindir: bin
        exclude:
        - os: macos-latest
          compiler: gcc
          # Don't use gcc on macOS.
    name: Build on ${{ matrix.os }} with ${{ matrix.compiler }}, C++${{ matrix.std }}
    runs-on: ${{ matrix.os }}
    env:
      LLVM: ${{ matrix.llvm }}
      BINDIR: ${{ matrix.bindir }}
      CXXFLAGS_STANDARD: -std=c++${{ matrix.std }}
    steps:
    - uses: actions/checkout@master
    - name: Install dependencies
      run: |
        scripts/install-prerequisites.sh
        ${{ matrix.compiler }} --version
        scripts/java-config.sh
    - name: Build TSDuck
      run: make -j5
    - name: Check built version
      run: make show-version
    - name: Run unitary tests
      run: make test
    - name: Download test suite
      run: |
        mkdir -p ../tsduck-test
        curl -s -L https://github.com/tsduck/tsduck-test/tarball/master | tar xz --strip 1 -C ../tsduck-test
    - name: Run test suite
      run: |
        make test-suite && status=$? || status=$?
        cd ../tsduck-test
        for f in $(find tmp -name '*.diff'); do
            echo "==== $f";
            cat "$f"
        done
        exit $status

  build_windows:
    strategy:
      fail-fast: false
      matrix:
        target: [Win64, Win32]
        configuration: [Release]
        std: [14, 20]
        include:
        - target: Win64
          suffix: x64
          testopt: --dev
        - target: Win32
          suffix: Win32
          testopt: --dev32
        exclude:
        - target: Win32
          std: 20
    name: Build on ${{ matrix.target }} with VC++, C++${{ matrix.std }}
    runs-on: windows-latest
    env:
      STDCPP: stdcpp${{ matrix.std }}
    steps:
    - uses: actions/checkout@master
    - name: Install dependencies
      run: |
        scripts/install-prerequisites.ps1 -GitHubActions -NoDoxygen -NoPause
    - name: Build TSDuck
      run: |
        scripts/build.ps1 -${{ matrix.target }} -${{ matrix.configuration }} -Parallel 5 -NoLowPriority -NoPause
    - name: Check built version
      run: |
        bin/${{ matrix.configuration }}-${{ matrix.suffix }}/tsversion.exe --version=all
    - name: Check plugins list
      run: |
        bin/${{ matrix.configuration }}-${{ matrix.suffix }}/tsp.exe --list
    - name: Run unitary tests
      run: |
        bin/${{ matrix.configuration }}-${{ matrix.suffix }}/utests-tsduckdll.exe
    - name: Run unitary tests (static)
      run: |
        bin/${{ matrix.configuration }}-${{ matrix.suffix }}/utests-tsducklib.exe
    - name: Download test suite
      run: |
        $ProgressPreference = 'SilentlyContinue'
        Invoke-WebRequest -UseBasicParsing -Uri https://github.com/tsduck/tsduck-test/archive/master.zip -OutFile test.zip
        Expand-Archive test.zip -DestinationPath . -Force
        Move-Item tsduck-test-master ../tsduck-test -Force
    - name: Run test suite
      shell: bash
      run: |
        cd ../tsduck-test
        ./run-all-tests.sh ${{ matrix.testopt }} && status=$? || status=$?
        for f in $(find tmp -name '*.diff'); do
            echo "==== $f";
            cat "$f"
        done
        exit $status

  build_doxygen:
    name: Doxygen documentation
    # ubuntu-latest is currently ubuntu-20.04, try to grab a more recent version of doxygen.
    runs-on: ubuntu-22.04
    steps:
    - uses: actions/checkout@master
    - name: Install dependencies
      run: |
        scripts/install-prerequisites.sh
        doxygen --version
    - name: Build TSDuck documentation
      run: |
        make doxygen
